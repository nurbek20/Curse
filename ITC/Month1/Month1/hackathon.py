# Задание 1:
    # Нужно создать обычный калькулятор состоящий из знаков +,-,*,/
    # 1. У пользователя просят выбрать знак
    # 2. Просят ввести 1-ое число
    # 3. Просят ввести 2-ое число
    # 4. Вывести результат
    # 5. После результата спросить у пользователя хочет он закончить или нет, 
    # если нет то калькулятор должен запускатся сначала
#     # 6. Учесть то что деление на ноль невозможно
while True:
    s=input("Введите знак(/,*,-,+): ")
    if s =='0':
        break
    if s not in ('/','*','-','+'):
        quit()
    a=float(input('Введите число: '))
    b=float(input('Введите число: '))
    if s=='+':
        print(a+b)
    elif s == '-':
        print(a-b)
    elif s == '*':
        print(a*b)
    elif s == '/':   
        if b  != 0:
            print(a/b)   
        else:
            print("на ноль делит нельзя") 


# Задание 2:
    # Даны три переменные "A", "B" и "C". 
    # Изменить значения этих переменных так, чтобы в "A" хранилось значение "A"+"B", 
    # в "B" хранилась разность старых значений "C" - "A", 
    # а в "C" хранилось сумма старых значений "A" + "B" + "C". 
    # Например, A=0, B=2, C=5, тогда новые значения A=2, B=5 и C=7.
a=0
b=2
c=5
print(a+b)
A=a+b
print(a+c)
B=a+c
print(b+c)
C=b+c
print(A,B,C)


# Задание 3:
    # Пользователь вводит сторону квадрата. Найдите периметр и площадь квадрата.
a1=int(input("Введите сторону квадрата: "))
print(a1**2)
print(a1*a1)


# Задание 4:
    # Вам даны несколько последовательностей чисел:
    # sequence_0 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0)
    # sequence_1 = (14,10,35,45,'60',70,90,0,105,150,'70')
    # sequence_2 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0.0)
    # sequence_3 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70')

    # Нужно проверить, все ли числа в КАЖДОЙ последовательности уникальны.
    # Если в последовательности были найдены дубликаты ---> Выведите на экран:
    # ;  "Последовательность не уникальна."
    # Если в последовательности дубликатов найдено не было ---> Выведите на экран:
    # ;  "Последовательность уникальна."
    # Если в решении задания не присутствует цикл ---> Задание не защитано.
sequence_0=(14,10,35,45,60,70,90,0,105,150,10.0,45.0,70,0)
sequence_1 = (14,10,35,45,60,70,90,0,105,150,70)
sequence_2 = (14,10,35,45,60,70,90,0,105,150,10.0,45.0,70,0.0)
sequence_3 = (14,10,35,45,60,70,90,0,105,150,10.0,45.0,70)
for i in sequence_0:
    if sequence_0.count(i) < 1:
        print("Последовательность уникальна")
        break
    else:
        print("Последовательность не уникальна")    
        break
for i in sequence_1:
    if sequence_1.count(i) < 1:
        print("Последовательность уникальна")
        break
    else: 
        print("Последовательность не уникальна")
        break
for i in sequence_2:
    if sequence_2.count(i)<1:
        print("Последовательность уникальна")
        break
    else:
        print("Последовательность не уникальна")
        break

for i in sequence_3:
    if sequence_3.count(i)<1:
        print("Последовательность уникальна")
        break
    else:
        print("Последовательность не уникальна")
        break



# Задание 5:
    # Вам дан TUPLE keys_values = ('one', 1,'two', 2, 'three', 3,  'four', 4, 
    # ; 'five', 5,'six', 6,'seven',  7,  'eight', 8, 'nine',9,'ten', 10,'eleven',  11,'twelve'  12 ,)
    # и пустая
    # В Tuple перечислены элементы, где идёт строгая очерёдность STRING и INTEGER.
    # То есть если перед вами элемент типа данных STRING то следующий точно INTEGER и наоборот.
    # Проходя по TUPLE необходимо брать элементы по парно, один элемент может 
    # ; относиться только и только к одной паре.
    # Ваша задача выявить если элемент является типом данных string()
    # ;  то записывать его как ключ в Dictionary -> pairs.

    # Результат:
    # pairs ={'one': 1, 'two': 2, 'three': 3, ...}

dict_pairs={}
keys_values = ('one', 1,'two', 2, 'three', 3,  'four', 4, 'five', 5,'six',
 6,'seven', 7,  'eight', 8, 'nine',9,'ten', 10, 'eleven',  11,'twelve' , 12)
for i in range(len(keys_values)):
    if i % 2 == 0:
        dict_pairs[keys_values[i]]=keys_values[i+1]
print(dict_pairs) 

# Задание 6:
#     Дано четырехзначное число. Верно ли, что цифры в нем расположены по убыванию? 
#     Например, 4311 - нет, 4321 - да, 5542 - нет, 5631 - нет, 9871 - да
num=int(input('Введите 4х значяное число: '))
num=str(num)
if(num[0])>(num[1])>(num[2])>(num[3]):
    print(True)
elif (num[0])<(num[1])<(num[2])<(num[3]):
    print(False)
else:
    print('Error')